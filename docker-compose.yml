version: "3"
services:
  nginx-monolith:
    container_name: nginx-monolith
    build: monolith/nginx
    ports:
      - 80:80
    depends_on:
      - flask-monolith
    networks:
      - monolith
      - reservation

  nginx-reservation:
    container_name: nginx-reservation
    build: reservation/nginx
    ports:
      - 8080:8080
    depends_on:
      - flask-monolith
    networks:
      - reservation
      - monolith

  flask-reservation:
    build: reservation
    environment: 
      - DATABASE_URI=postgresql://postgres:postgres@postgres-reservation:5432/postgres
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_APP=app.py
      - PYTHONPATH=./
    ports:
      - "6000-6010:6000"
    links:
      - postgres-reservation
    networks:
      - monolith
    command: flask run
    depends_on:
      - postgres-reservation

  flask-monolith:
    build: monolith
    environment: 
      - DATABASE_URI=postgresql://postgres:postgres@postgres-monolith:5432/postgres
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_APP=app.py
      - PYTHONPATH=./
    ports:
      - "5000-5010:5000"
    links:
      - postgres-monolith
    networks:
      - monolith
    command: flask run
    depends_on:
      - postgres-monolith

  postgres-reservation:
    container_name: postgres-reservation
    hostname: postgres-reservation
    restart: always
    image: postgres:latest
    environment: 
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - "5432"
    networks:
      - reservation

  postgres-monolith:
    container_name: postgres-monolith
    hostname: postgres-monolith
    restart: always
    image: postgres:latest
    environment: 
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - "5432"
    networks:
      - monolith

networks:
  monolith:
  reservation: