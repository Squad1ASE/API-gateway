version: "3"
services:
  nginx:
    container_name: nginx
    build: nginx
    ports:
      - 80:80
    depends_on:
      - flask
    networks:
      - default

  flask:
    build: 
      context: .
      dockerfile: Dockerfile
    environment: 
    - DATABASE_URI=postgresql://postgres:postgres@postgres:5432/postgres
    - FLASK_RUN_HOST=0.0.0.0
    - FLASK_APP=monolith/app.py
    - CELERY_BROKER_URL=redis://redis:6379
    - CELERY_BACKEND_URL=redis://redis:6379
    - PYTHONPATH=monolith/
    ports:
      - "5000-5010:5000"
    links:
      - postgres
    networks:
      - default
    command: flask run
    depends_on:
      - postgres
    #volumes:
    #  - .:/gooutsafe

  postgres:
    container_name: postgres
    hostname: postgres
    restart: always
    image: postgres:latest
    environment: 
      - POSTGRES_HOST_AUTH_METHOD=trust
    #volumes_from:
    #  - data
    #volumes:
    #  - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    #  - ./backups/postgresql:/backup
    #env_file:
    #  - env
    expose:
      - "5432"
    networks:
      - default

  celery:
    build: 
      context: .
    environment: 
      - DATABASE_URI=postgresql://postgres:postgres@postgres:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_BACKEND_URL=redis://redis:6379
      - PYTHONPATH=monolith/
    command: "celery -A monolith.app.celery worker -l info"
    user: root
    networks:
      - default
    links:
      - redis-service
    depends_on:
      - flask
      - redis-service
      - postgres
    #volumes:
    #  - .:/gooutsafe
        
  celery-beat:
    build: 
      context: .
    environment: 
      - DATABASE_URI=postgresql://postgres:postgres@postgres:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_BACKEND_URL=redis://redis:6379
      - PYTHONPATH=monolith/
    command: "celery -A monolith.app.celery beat -l info"
    user: root
    networks:
      - default
    links:
      - redis-service
    depends_on:
      - flask
      - redis-service
      - postgres
    #volumes:
    #  - .:/gooutsafe

  redis-service:
    container_name: redis
    restart: always
    networks:
      - default
    image: redis:latest
    ports:
      - "6380:6380"
    links:
      - postgres
    depends_on:
      - postgres
    #volumes:
    #  - .:/gooutsafe