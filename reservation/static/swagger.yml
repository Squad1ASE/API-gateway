openapi: 3.0.1
info:
  title: Booking Service API
  description: Reservation and Seat from GoOutSafe with Microservices
  version: "0.1"
servers:
- url: /
paths:

  /reservation/all: 
    get:
      tags:
        - All reservations
      summary: Get all the reservations
      operationId: views.reservation.get_all_reservation
      responses:
        200:
          description: Return all reservations
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservation:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reservation'

  /reservation/<int:reservation_id>:
    get:
      tags:
        - One specific reservation
      summary: Get the reservation with this ID
      operationId: views.reservation.get_reservation
      responses:
        200:
          description: Return the reservation with this ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservation:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reservation'
        404:
          description: There is not a reservation with this ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reservation/<int:reservation_id>/seat/all:
    get:
      tags:
        - All seat for this reservation 
      summary: Get all the seat for this reservation
      operationId: views.reservation.get_all_seat
      responses:
        200:
          description: Return all seats for this reservation
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservation:
                    type: array
                    items:
                      $ref: '#/components/schemas/Seat'   
        404:
          description: There are not seats for this reservation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
               
  /reservation/restaurant/<int:restaurant_id>/all: 
    get:
      tags:
        - All reservations for this restaurant
      summary: Get all the reservations for this restaurant
      operationId: views.reservation.get_restaurant_reservations
      responses:
        200:
          description: Return all reservations for this reservation
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservation:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reservation'
        404:
          description: There are not reservations for this restaurant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /reservation/user/<int:user_id>/all: 
    get:
      tags:
        - All reservations for this user
      summary: Get all the reservations for this user  
      operationId: views.reservation.get_user_reservations
      responses:
        200:
          description: Return all personal reservations of a user
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservation:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/Reservation'
                        - $ref: '#/components/schemas/Seat'
                        - $ref: '#/components/schemas/ReservationSeat'                    
        403:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



components:
  schemas:
    Error:
      required:
      - message
      properties:
        message:
          type: string
          example: You are not allowed to this feature

    Reservation:
      required:
      - booker_id
      - restaurant_id
      - table_id
      - date
      - cancelled
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 123
        booker_id:
          type: integer
          readOnly: true
          example: 123
        restaurant_id:
          type: integer
          readOnly: true
          example: 123
        table_id:
          type: integer
          readOnly: true
          example: 123
        date:
          type: date
          readOnly: true
          example: "12/10/2020 12:00"
        cancelled:
          type: boolean
          readOnly: false
          example: false

    Seat:
      required:
      - reservation_id
      - guests_email
      - confirmed
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 123
        reservation_id:
          type: integer
          readOnly: true
          example: 123
        guests_email:
          type: string
          readOnly: true
          example: guest@email.com
        confirmed:
          type: boolean
          readOnly: false
          example: false          

    ReservationSeat:
      required:
      - booker_id
      - restaurant_id
      - table_id
      - date
      - cancelled
      - reservation_id
      - guests_email
      - confirmed
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 123
        booker_id:
          type: integer
          readOnly: true
          example: 123
        restaurant_id:
          type: integer
          readOnly: true
          example: 123
        table_id:
          type: integer
          readOnly: true
          example: 123
        date:
          type: date
          readOnly: true
          example: "12/10/2020 12:00"
        cancelled:
          type: boolean
          readOnly: false
          example: false
        reservation_id:
          type: integer
          readOnly: true
          example: 123
        guests_email:
          type: string
          readOnly: true
          example: guest@email.com
        confirmed:
          type: boolean
          readOnly: false
          example: false          

       
  